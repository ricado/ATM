<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!-- Mapping file autogenerated by MyEclipse Persistence Tools -->
<hibernate-mapping>
	<class name="com.atm.model.define.chat.CrowdInfo">
		<id name="crowdId" type="java.lang.Integer">
			<column name="crowdID" />
			<generator class="identity" />
		</id>
		<property name="crowdLabel" type="java.lang.String">
			<column name="crowdLabel" length="20">
				<comment>群标签</comment>
			</column>
		</property>
		<property name="crowdDescription" type="java.lang.String">
			<column name="crowdDescription" length="200">
				<comment>群描述</comment>
			</column>
		</property>
		<property name="crowdHeadImage" type="java.lang.String">
			<column name="crowdHeadImage" length="300">
				<comment>群头像路径</comment>
			</column>
		</property>
		<property name="isHidden" type="java.lang.Boolean">
			<column name="isHidden">
				<comment>是否隐藏群</comment>
			</column>
		</property>
		<property name="crowdName" type="java.lang.String">
			<column name="crowdName" length="20">
				<comment>群聊名</comment>
			</column>
		</property>
		<property name="numLimit" type="java.lang.Integer">
			<column name="numLimit">
				<comment>最高参与人数</comment>
			</column>
		</property>
		<property name="crowdNum" type="java.lang.Integer">
			<column name="crowdNum" length="9">
				<comment>群人数</comment>
			</column>
		</property>
	</class>
	<!-- crowdMenberInfo储存过程 -->
	<!-- <sql-query name="crowdMenberInfo" callable="true"> 查询 <return class="CrowdMenberInfo"> 
		<return-property name="userId" column="userId"/> <return-property name="crowdId" 
		column="crowdId"/> <return-property name="name" column="name"/> <return-property 
		name="nickName" column="nickName"/> <return-property name="crowdName" column="crowdName"/> 
		<return-property name="roleName" column="roleName"/> </return> {call crowdMenberInfo(?,?)} 
		</sql-query> -->

	<sql-query name="crowdOffRecord" callable="true">
		<return class="com.atm.model.define.chat.CrowdChatRecord">
			<return-property name="recordId" column="recordID" />
			<return-property name="crowdId" column="crowdID" />
			<return-property name="userId" column="userID" />
			<return-property name="nickname" column="nickname"></return-property>
			<return-property name="sendTime" column="sendTime" />
			<return-property name="sendContent" column="sendContent" />
			<return-property name="flag" column="flag" />
		</return>
		{call crowdOffRecord(?)}
	</sql-query>

	<sql-query name="crowdInfo" callable="true">
		<return class="com.atm.model.define.chat.CrowdInfo">
			<return-property name="crowdId" column="crowdID" />
			<return-property name="crowdName" column="crowdName" />
			<return-property name="crowdDescription" column="crowdDescription" />
			<return-property name="crowdLabel" column="crowdLabel" />
			<return-property name="crowdHeadImage" column="crowdHeadImage" />
			<return-property name="isHidden" column="isHidden" />
			<return-property name="numLimit" column="numLimit" />
			<return-property name="crowdNum" column="crowdNum" />
		</return>
		{call crowdInfo(?)}
	</sql-query>
	
	<sql-query name="findCrowd" callable="true">
		<return class="com.atm.model.define.chat.CrowdInfo">
			<return-property name="crowdId" column="crowdID" />
			<return-property name="crowdName" column="crowdName" />
			<return-property name="crowdDescription" column="crowdDescription" />
			<return-property name="crowdLabel" column="crowdLabel" />
			<return-property name="crowdHeadImage" column="crowdHeadImage" />
			<return-property name="isHidden" column="isHidden" />
			<return-property name="numLimit" column="numLimit" />
			<return-property name="crowdNum" column="crowdNum" />
		</return>
		{call findCrowd(?,?,?,?)}
	</sql-query>
	<!-- <sql-query name="interestingCrowd" callable="true"> <return> <return-property 
		name="crowdId" column="crowdID" /> <return-property name="crowdName" column="crowdName" 
		/> <return-property name="crowdHeadImage" column="crowdHeadImage" /> </return> 
		{call interestingCrowd(?)} </sql-query> -->
</hibernate-mapping>
